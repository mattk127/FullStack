{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\cse183\\\\Assignment9\\\\frontend\\\\src\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar'; // import Hidden from '@material-ui/core/Hidden';\n\nimport Paper from '@material-ui/core/Paper'; // import Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport SharedContext from './SharedContext'; // const axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  mailbox: {\n    maxWidth: '90vw'\n  }\n}));\n/**\n * Prints & returns Mailbox\n * @param {function} setMail\n * @param {string} mailbox\n */\n\nfunction getmail(setMail, mailbox) {\n  fetch('http://localhost:3010/v0/mail?mailbox=' + mailbox).then(response => {\n    return response.json();\n  }).then(json => {\n    setMail(json[0].mail);\n  }).catch(error => {\n    console.log(error.toString());\n  });\n}\n/**\n   *\n   * @param {*} ISODate\n   * @return {*}\n   */\n\n\nfunction fixDate(ISODate) {\n  const date = ISODate.split('T')[0];\n  const time = ISODate.split('T')[1].slice(0, -1);\n  const year = date.split('-')[0];\n  let month = date.split('-')[1];\n\n  if (month < 10) {\n    month = month.substring(1);\n  }\n\n  let day = date.split('-')[2];\n\n  if (day < 10) {\n    day = day.substring(1);\n  }\n\n  const monthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const today = new Date();\n\n  if (day == today.getDate() && month == today.getMonth() - 1 && year == today.getFullYear()) {\n    return time.slice(0, -3);\n  } else if (year == today.getFullYear()) {\n    return monthArray[month - 1] + ' ' + day.toString();\n  } else {\n    return year;\n  }\n}\n/**\n * @return {object} JSX\n */\n\n\nfunction Content() {\n  _s();\n\n  const {\n    mailbox\n  } = React.useContext(SharedContext);\n  const [mail, setMail] = React.useState([]);\n  const classes = useStyles();\n  const sorted = mail.sort((a, b) => Date.parse(b.received) - Date.parse(a.received));\n  React.useEffect(() => {\n    getmail(setMail, mailbox);\n  }, [mailbox]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), mailbox, /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.mailbox,\n      noWrap: \"true\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: sorted.map(email => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText // eslint-disable-next-line\n          , {\n            primary: email.from.name,\n            secondary: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: email.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: email.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            alginItems: \"center\",\n            primary: fixDate(email.received)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, email.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"XFlhBdakiA7DYYqASZlOjMUCohQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["C:/Users/Matt/Desktop/cse183/Assignment9/frontend/src/Content.js"],"names":["React","makeStyles","Toolbar","Paper","List","ListItem","ListItemIcon","ListItemText","AccountCircle","Typography","SharedContext","useStyles","theme","paper","flexGrow","padding","spacing","mailbox","maxWidth","getmail","setMail","fetch","then","response","json","mail","catch","error","console","log","toString","fixDate","ISODate","date","split","time","slice","year","month","substring","day","monthArray","today","Date","getDate","getMonth","getFullYear","Content","useContext","useState","classes","sorted","sort","a","b","parse","received","useEffect","map","email","from","name","subject","content","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\n// import Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport SharedContext from './SharedContext';\n\n// const axios = require('axios');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  mailbox: {\n    maxWidth: '90vw',\n  },\n}));\n\n/**\n * Prints & returns Mailbox\n * @param {function} setMail\n * @param {string} mailbox\n */\nfunction getmail(setMail, mailbox) {\n  fetch('http://localhost:3010/v0/mail?mailbox=' + mailbox)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        setMail(json[0].mail);\n      })\n      .catch((error) => {\n        console.log(error.toString());\n      });\n}\n\n/**\n   *\n   * @param {*} ISODate\n   * @return {*}\n   */\nfunction fixDate(ISODate) {\n  const date = ISODate.split('T')[0];\n  const time = ISODate.split('T')[1].slice(0, -1);\n  const year = date.split('-')[0];\n  let month = date.split('-')[1];\n  if (month < 10) {\n    month = month.substring(1);\n  }\n  let day = date.split('-')[2];\n  if (day < 10) {\n    day = day.substring(1);\n  }\n  const monthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n    'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const today = new Date();\n\n  if (day == today.getDate() &&\n    month == today.getMonth() - 1 &&\n    year == today.getFullYear()) {\n    return time.slice(0, -3);\n  } else if (year == today.getFullYear()) {\n    return monthArray[month-1] + ' ' + day.toString();\n  } else {\n    return year;\n  }\n}\n\n/**\n * @return {object} JSX\n */\nfunction Content() {\n  const {mailbox} =\n    React.useContext(SharedContext);\n  const [mail, setMail] = React.useState([]);\n  const classes = useStyles();\n  const sorted = mail.sort((a, b) =>\n    Date.parse(b.received) - Date.parse(a.received));\n\n  React.useEffect(() => {\n    getmail(setMail, mailbox);\n  }, [mailbox]);\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar/>\n      {mailbox}\n      <Typography className={classes.mailbox} noWrap='true'>\n        <List>\n          {sorted.map((email) => (\n            <ListItem button\n              key={email.id}\n            >\n              <ListItemIcon>\n                <AccountCircle />\n              </ListItemIcon>\n              <ListItemText\n              // eslint-disable-next-line\n                primary={email.from.name}\n                secondary={\n                  <div>\n                    <div>{email.subject}</div>\n                    <div>{email.content}</div>\n                  </div>\n                }/>\n              {/* eslint-disable-next-line */}\n              <ListItemText alginItems='center' primary={fixDate(email.received)}/>\n            </ListItem>\n          ))}\n        </List>\n      </Typography>\n    </Paper>\n  );\n}\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}