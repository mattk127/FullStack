{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\cse183\\\\Assignment9\\\\frontend\\\\src\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SharedContext from './SharedContext'; // import AppBar from '@material-ui/core/AppBar';\n// code for the dialog taken from https://material-ui.com/components/dialogs/\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    edge: 'start',\n    flex: '0',\n    color: 'inherit'\n  },\n  button1: {\n    edge: 'end',\n    justify: 'flex-end',\n    color: 'inherit'\n  }\n}));\n/**\n * @return {object}\n */\n\nexport default function settingsView() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    openSettings,\n    setOpenSettings\n  } = React.useContext(SharedContext);\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  if (openSettings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullScreen: true,\n        open: open,\n        onClose: handleSettingsClose,\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.button,\n          onClick: handleSettingsClose,\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.button1,\n          children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(settingsView, \"eU0L4KSrcs2eVrktu1zndIKke2A=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["C:/Users/Matt/Desktop/cse183/Assignment9/frontend/src/Settings.js"],"names":["React","makeStyles","Dialog","IconButton","ArrowBackIcon","SaveIcon","Toolbar","SharedContext","useStyles","theme","button","edge","flex","color","button1","justify","settingsView","classes","openSettings","setOpenSettings","useContext","handleSettingsClose","open"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,IAAI,EAAE,GAFA;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAD+B;AAMvCC,EAAAA,OAAO,EAAE;AACPH,IAAAA,IAAI,EAAE,KADC;AAEPI,IAAAA,OAAO,EAAE,UAFF;AAGPF,IAAAA,KAAK,EAAE;AAHA;AAN8B,CAAZ,CAAD,CAA5B;AAYA;AACA;AACA;;AACA,eAAe,SAASG,YAAT,GAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM;AAACU,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAkCnB,KAAK,CAACoB,UAAN,CAAiBb,aAAjB,CAAxC;;AAEA,QAAMc,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,MAAID,YAAJ,EAAkB;AAChB,wBACE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,UAAU,MAAlB;AAAmB,QAAA,IAAI,EAAEI,IAAzB;AAA+B,QAAA,OAAO,EAAED,mBAAxC;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEJ,OAAO,CAACP,MAA/B;AACE,UAAA,OAAO,EAAEW,mBADX;AAEE,wBAAW,OAFb;AAAA,iCAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEJ,OAAO,CAACH,OAA/B;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACL,WAAO,IAAP;AACD;AACF;;GA7BuBE,Y;UACNR,S","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SharedContext from './SharedContext';\n// import AppBar from '@material-ui/core/AppBar';\n// code for the dialog taken from https://material-ui.com/components/dialogs/\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    edge: 'start',\n    flex: '0',\n    color: 'inherit',\n  },\n  button1: {\n    edge: 'end',\n    justify: 'flex-end',\n    color: 'inherit',\n  },\n}));\n/**\n * @return {object}\n */\nexport default function settingsView() {\n  const classes = useStyles();\n  const {openSettings, setOpenSettings} = React.useContext(SharedContext);\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  if (openSettings) {\n    return (\n      <div>\n        <Toolbar/>\n        <Toolbar/>\n        <Dialog fullScreen open={open} onClose={handleSettingsClose}>\n          <Toolbar/>\n          <IconButton className={classes.button}\n            onClick={handleSettingsClose}\n            aria-label=\"close\">\n            <ArrowBackIcon />\n          </IconButton>\n          <IconButton className={classes.button1}>\n            <SaveIcon/>\n          </IconButton>\n        </Dialog>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}